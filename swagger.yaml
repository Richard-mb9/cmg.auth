openapi: "3.0.0"
info:
  description: "API para gerenciamento de login"
  version: "1.0"
  title: "Auth"
  contact:
    email: "richard_mbs@hotmail.com"
servers:
  - url: http://localhost:5000
    description: Ambiente local

paths:
  /auth:
    post:
      tags:
        - "Auth"
      summary: "Gerar um Token para autenticação"
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/auth"
      responses:
        200:
          description: "Token foi criado com sucesso"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  token:
                    type: "string"
                    description: "Token gerado valido por 24 horas"
                    example: "seuTokenViraAquiComoUmaGrandeString"
        400:
          description: "foi enviado algum parametro incorreto no payload, ou as credenciais estão incorretas"

  #usuarios
  /users:
    post:
      tags:
        - "Usuarios"
      summary: "Criar um novo usuario"
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/users-create"
      responses:
        201:
          description: "Usuario foi criado com sucesso"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  id:
                    type: "number"
                    description: "id do usario criado"
                    example: 1
        409:
          description: "Já existe um usuario cadastrado com o email enviado"
        400:
          description: "foi enviado algum parametro incorreto no payload"
    get:
      tags:
        - "Usuarios"
      summary: "Lista usuarios"
      parameters:
        - in: query
          name: profile
          schema:
            type: string
          description: nomes do perfil que os usuarios serão filtrados
          example: ADMIN
        - in: query
          name: email
          schema:
            type: string
          description: email completo ou parte do email que sera feita a busca
        - in: query
          name: id
          schema:
            type: integer
          description: id do usuario que sera feita a busca
        - in: query
          name: enable
          schema:
            type: boolean
          description: busca por usuarios ativos ou inativos
        - in: query
          name: page_size
          schema:
            type: integer
          description: quantidade maxima de items que espera que seja retornado, o valor default é 1000
        - in: query
          name: page
          schema:
            type: integer
          description: pagina que deseja efetuar a busca, caso não seja enviado sera retornada a primeira pagina
      responses:
        200:
          description: "Listagem realizada com sucesso"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/user"
        403:
          description: "Você não tem permissão para listar usuarios"

  /users/{user_id}:
    put:
      tags:
        - "Usuarios"
      summary: "Atualiza um usuario"
      parameters:
        - in: path
          name: user_id
          schema:
            type: integer
          required: true
          description: id do usuario
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                enable:
                  type: string
                  example: false
                  description: Flag que indica se o usuario esta ativo
      responses:
        204:
          description: "A Usuario alterado com sucesso"
        400:
          description: "Algum parametro incorreto foi enviado, ou a senha antiga esta incorreta"
        403:
          description: "Usuario não tem permissão para atualizar outros usuarios"

  /users/{user_id}/profiles:
    put:
      tags:
        - "Usuarios"
      summary: "Altera os Perfis de determinado usuario"
      parameters:
        - in: path
          name: user_id
          schema:
            type: integer
          required: true
          description: id do usuario
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/users-update-profiles"
      responses:
        204:
          description: "A Usuario alterado com sucesso"
        400:
          description: "Algum parametro incorreto foi enviado, ou a senha antiga esta incorreta"

  /users/{user_id}/update-password:
    put:
      tags:
        - "Usuarios"
      summary: "Atualizar a senha do usuario"
      parameters:
        - in: path
          name: user_id
          schema:
            type: integer
          required: true
          description: id do usuario que esta tentando alterar a senha
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/update-password"
      responses:
        204:
          description: "A senha foi alterada com sucesso"
        400:
          description: "Algum parametro incorreto foi enviado, ou a senha antiga esta incorreta"

  /profiles:
    get:
      tags:
        - "Perfis de usuarios"
      summary: "Listar os perfis cadastrados"
      responses:
        200:
          description: "Listagem realizada com sucesso"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/profiles"
    post:
      tags:
        - "Perfis de usuarios"
      summary: "Criar um novo perfil de usuarios"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - "name"
              properties:
                name:
                  type: string
                  example: "perfil de exemplo"
                  description: "Nome do perfil que sera criado"
      responses:
        201:
          description: "Perfil criado com sucesso"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  id:
                    type: "number"
                    description: "id do perfil criado"
                    example: 1
        409:
          description: "Já existe um perfil cadastrado com o nome enviado"
        400:
          description: "foi enviado algum parametro incorreto no payload"

  /profiles/{profile_id}:
    put:
      tags:
        - "Perfis de usuarios"
      summary: "Atualizar um perfil"
      parameters:
        - in: path
          name: profile_id
          schema:
            type: integer
          required: true
          description: id do perfil
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "PERFIL_EXEMPLO"
                  description: "novo nome do perfil"
                roles_ids:
                  type: array
                  items:
                    type: number
                    example: 1
                  description: "ids das permissões que serão atribuidas ao perfil"
      responses:
        204:
          description: "Perfil atualizado com sucesso"
        401:
          description: "Necessario autenticação"
        403:
          description: "O Usuario não ter permissão para atualziar perfis"
        404:
          description: "Não existe perfil cadastrado com o id enviado"

    delete:
      tags:
        - "Perfis de usuarios"
      summary: "Deletar um perfil"
      parameters:
        - in: path
          name: profile_id
          schema:
            type: integer
          required: true
          description: id do perfil de usuario que sera excluido
      responses:
        204:
          description: "Perfil excluido com sucesso"
        404:
          description: "Não existe perfil cadastrado com o id enviado"

  /profiles/{profile_id}/roles:
    get:
      tags:
        - "Perfis de usuarios"
      summary: "Listar as permissões de determinado perfil"
      parameters:
        - in: path
          name: profile_id
          schema:
            type: integer
          required: true
          description: id do perfil de usuario que sera exibido
      responses:
        200:
          description: "Listagem realizada com sucesso"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/roles"
        404:
          description: "Não existe perfil cadastrado com o id enviado"

  /roles:
    get:
      tags:
        - "Permissões"
      summary: "Lista as permissões cadastradas"
      responses:
        200:
          description: "Listagem realizada com sucesso"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/roles"
    post:
      tags:
        - "Permissões"
      summary: "Criar uma nova permissão"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - "name"
              properties:
                name:
                  type: string
                  example: "permissão de exemplo"
                  description: "Nome da permissão que sera criada"
      responses:
        201:
          description: "Permissão criada com sucesso"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  id:
                    type: "number"
                    description: "id da permissão criada"
                    example: 1
        409:
          description: "Já existe uma permissão cadastrada com o nome enviado"
        400:
          description: "foi enviado algum parametro incorreto no payload"

  /roles/{role_id}:
    put:
      tags:
        - "Permissões"
      summary: "Atualizar Permissões"
      parameters:
        - in: path
          name: role_id
          schema:
            type: integer
          required: true
          description: id da permissão que será Atualizada
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - "name"
              properties:
                name:
                  type: string
                  example: "PERMISSAO_EXEMPLO"
                  description: "novo nome da permissão"
      responses:
        204:
          description: "Permissão atualizada com sucesso"
        403:
          description: "Usuario não tem permissão para atualizar permissões"
        404:
          description: "Não existe permissão cadastrada com o id enviado"

    delete:
      tags:
        - "Permissões"
      summary: "Deletar Permissões"
      parameters:
        - in: path
          name: role_id
          schema:
            type: integer
          required: true
          description: id da permissão que será excluida
      responses:
        204:
          description: "Permissão excluida com sucesso"
        404:
          description: "Não existe permissão cadastrada com o id enviado"

components:
  schemas:
    auth:
      type: object
      required:
        - "email"
        - "password"
      properties:
        email:
          type: string
          example: "Jão@gmail.com"
          description: "email do usuario"
        password:
          type: string
          example: "123456789"
          description: "senha"
    users-create:
      type: object
      required:
        - "email"
        - "password"
        - "profiles"
      properties:
        email:
          type: string
          example: "Jão@gmail.com"
          description: "email do usuario"
        profiles:
          type: array
          example: ["STORE", "MANAGER"]
          description: "Perfis do usuario"
          items:
            type: string
            enum:
              - "USER"
              - "ADMIN"
              - "BACKOFFICE"
              - "STORE"
              - "MANAGER"
              - "TABLE"
              - "WAITER"
              - "KITCHEN"
              - "CASH_OPERATOR"
        password:
          type: string
          example: "123456789"
          description: "senha"
    users-update-profiles:
      type: object
      required:
        - "profiles"
      properties:
        profiles:
          type: array
          example: ["STORE", "MANAGER"]
          description: "Perfis do usuario"
          items:
            type: string
            enum:
              - "USER"
              - "ADMIN"
              - "BACKOFFICE"
              - "STORE"
              - "MANAGER"
              - "TABLE"
              - "WAITER"
              - "KITCHEN"
              - "CASH_OPERATOR"
    update-password:
      type: object
      required:
        - "old_password"
        - "new_password"
      properties:
        old_password:
          type: string
          example: "123456789"
          description: "antiga senha do usuario"
        new_password:
          type: string
          example: "#123!abc"
          description: "nova senha"

    #Permissões
    roles:
      type: "object"
      properties:
        id:
          type: number
          example: 1
          description: "id da permissão"
        name:
          type: string
          example: "EXEMPLO_DE_PERMISSAO"
          description: "nome da permissão"

    #Perfis
    profiles:
      type: "object"
      properties:
        id:
          type: number
          example: 5
          description: "id da do perfil"
        name:
          type: string
          example: "STORE"
          description: "nome do perfil"
    profiles-assign-roles:
      type: object
      required:
        - "roles_ids"
      properties:
        roles_ids:
          type: array
          items:
            type: number
            example: 1
            description: "ids das permissões que serão atribuidas ao perfil"
    user:
      type: object
      required:
        - "id"
        - "email"
        - "profiles"
        - "enabed"
      properties:
        id:
          type: integer
          example: 1
          description: id do usuario
        email:
          type: string
          example: user@hotmail.com
          description: email do usuario
        profiles:
          type: array
          items:
            type: string
          description: lista que contem os perfis do usuario
          example: ["STORE", "MANAGER"]
        enabled:
          type: boolean
          example: true
          description: flag que indica se o usuario esta ativo
