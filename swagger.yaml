openapi: "3.0.0"
info:
  description: "API para gerenciamento de login"
  version: "1.0"
  title: "Auth"
  contact:
    email: "richard_mbs@hotmail.com"
servers:
  - url: http://localhost:5000
    description: Ambiente local

paths:
  /users:
    post:
      tags:
        - "Usuarios"
      summary: "Criar um novo usuario"
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/users-create"
      responses:
        201:
          description: "Usuario foi criado com sucesso"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  id:
                    type: "number"
                    description: "id do usario criado"
                    example: 1
        409:
          description: "Já existe um usuario cadastrado com o email enviado"
        400:
          description: "foi enviado algum parametro incorreto no payload"

  /users/{user_id}/update-password:
    put:
      tags:
        - "Usuarios"
      summary: "Atualizar a senha do usuario"
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/update-password"
      responses:
        204:
          description: "A senha foi alterada com sucesso"
        400:
          description: "Algum parametro incorreto foi enviado, ou a senha antiga esta incorreta"

  /users/{user_id}/roles/assign:
    post:
      tags:
        - "Usuarios"
      summary: "Atribuir permissão ao usuario"
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/user-assign"
      responses:
        204:
          description: "A permissão foi atribuida ao usuario com sucesso"
        400:
          description: "Algum parametro incorreto foi enviado no payload"

  /users/{user_id}/roles/unassign:
    post:
      tags:
        - "Usuarios"
      summary: "Remover permissão ao usuario"
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/user-assign"
      responses:
        204:
          description: "A permissão foi removida com sucesso"
        400:
          description: "Algum parametro incorreto foi enviado no payload"
  

  /roles:
    get:
      tags:
        - "Permissoes"
      summary: "Lista as permissões cadastradas"
      responses:
        200:
          description: "Listagem realizada com sucesso"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/roles"
    post:
      tags:
        - "Permissoes"
      summary: "Criar uma nova permissão"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - "name"
              properties:
                name:
                  type: string
                  example: "permissão de exemplo"
                  description: "Nome da permissão que sera criada"
      responses:
        201:
          description: "Permissão criada com sucesso"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  id:
                    type: "number"
                    description: "id do usario criado"
                    example: 1
        409:
          description: "Já existe uma permissão cadastrada com o nome enviado"
        400:
          description: "foi enviado algum parametro incorreto no payload"
  
  /roles/{role_id}:
    delete:
        tags:
          - "Permissoes"
        summary: "Deletar Permissões"
        responses:
          204:
            description: "Permissão excluida com sucesso"
          404:
            description: "Não existe permissão cadastrada com o id enviado"


                
components:
  schemas:
    users-create:
      type: object
      required:
        - "email"
        - "password"
      properties:
        email:
          type: string
          example: "Jão@gmail.com"
          description: "email do usuario"
        password:
          type: string
          example: "123456789"
          description: "senha"
    update-password:
      type: object
      required:
        - "old_password"
        - "new_password"
      properties:
        old_password:
          type: string
          example: "123456789"
          description: "antiga senha do usuario"
        new_password:
          type: string
          example: "#123!abc"
          description: "nova senha"
    user-assign:
      type: object
      required:
        - "roles_ids"
      properties:
        roles_ids:
          type: array
          items:
            type: number
            example: 1
            description: "ids das permissões que serão atribuidas ao usuario"

    #Permissões
    roles:
      type: "object"
      properties:
        id:
          type: number
          example: 1
          description: "id da permissão"
        name:
          type: string
          example: 1
          description: "nome da permissão"